graph(%self.1 : __torch__.model.efficient01A.EfficientNet01A,
      %x.1 : Tensor):
  %2 : int = prim::Constant[value=-1]()
  %3 : str = prim::Constant[value="none"]()
  %4 : int = prim::Constant[value=1]() # /workspace/ImageGenetic/model/efficient01A.py:113:29
  %stem_bn.1 : __torch__.torch.nn.modules.batchnorm.BatchNorm2d = prim::GetAttr[name="stem_bn"](%self.1)
  %stem_conv.1 : __torch__.torch.nn.modules.conv.Conv2d = prim::GetAttr[name="stem_conv"](%self.1)
  %17 : int = prim::Constant[value=1]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:550:33
  %weight.8 : Tensor = prim::GetAttr[name="weight"](%stem_conv.1)
  %bias.8 : Tensor? = prim::GetAttr[name="bias"](%stem_conv.1)
  %20 : int[] = prim::ListConstruct(%17, %17)
  %21 : int[] = prim::ListConstruct(%17, %17)
  %22 : int[] = prim::ListConstruct(%17, %17)
  %23 : Tensor = aten::conv2d(%x.1, %weight.8, %bias.8, %20, %21, %22, %17) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %24 : bool = prim::Constant[value=1]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2821:8
  %25 : int = prim::Constant[value=2]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:31
  %26 : int = prim::Constant[value=0]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:22
  %27 : str = prim::Constant[value="Expected more than 1 value per channel when training, got input size {}"]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
  %28 : str = prim::Constant[value="builtins.ValueError"]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:452:18
  %29 : str = prim::Constant[value="expected 4D input (got {}D input)"]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:452:29
  %30 : int = prim::Constant[value=4]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:451:26
  %31 : float = prim::Constant[value=1.0000000000000001e-05]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:204:12
  %32 : float = prim::Constant[value=0.10000000000000001]() # :0:0
  %33 : int = prim::Constant[value=1]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:46
  %34 : int = aten::dim(%23) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:451:11
  %35 : bool = aten::ne(%34, %30) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:451:11
   = prim::If(%35) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:451:8
    block0():
      %36 : int = aten::dim(%23) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:452:55
      %37 : str = aten::format(%29, %36) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:452:29
       = prim::RaiseException(%37, %28) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:452:12
      -> ()
    block1():
      -> ()
  %training.6 : bool = prim::GetAttr[name="training"](%stem_bn.1)
   = prim::If(%training.6) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.4 : Tensor = prim::GetAttr[name="num_batches_tracked"](%stem_bn.1)
      %40 : Tensor = aten::add_(%num_batches_tracked.4, %33, %33) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training.8 : bool = prim::GetAttr[name="training"](%stem_bn.1)
  %running_mean.4 : Tensor = prim::GetAttr[name="running_mean"](%stem_bn.1)
  %running_var.4 : Tensor = prim::GetAttr[name="running_var"](%stem_bn.1)
  %weight.10 : Tensor = prim::GetAttr[name="weight"](%stem_bn.1)
  %bias.10 : Tensor = prim::GetAttr[name="bias"](%stem_bn.1)
   = prim::If(%training.8) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %46 : int[] = aten::size(%23) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.4 : int = aten::__getitem__(%46, %26) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %48 : int = aten::len(%46) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %49 : int = aten::sub(%48, %25) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0.3 : int = prim::Loop(%49, %24, %size_prods.4) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.4 : int, %size_prods0.10 : int):
          %53 : int = aten::add(%i.4, %25) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %54 : int = aten::__getitem__(%46, %53) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.4 : int = aten::mul(%size_prods0.10, %54) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%24, %size_prods1.4)
      %56 : bool = aten::eq(%size_prods0.3, %33) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%56) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %57 : str = aten::format(%27, %46) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%57, %28) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %58 : Tensor = aten::batch_norm(%23, %weight.10, %bias.10, %running_mean.4, %running_var.4, %training.8, %32, %31, %24) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %x0.1 : Tensor = aten::gelu(%58, %3) # /workspace/ImageGenetic/model/efficient01A.py:110:12
  %blocks.1 : __torch__.torch.nn.modules.container.Sequential = prim::GetAttr[name="blocks"](%self.1)
  %59 : str = prim::Constant[value="none"]()
  %60 : int = prim::Constant[value=1]() # /workspace/ImageGenetic/model/efficient01A.py:49:26
  %61 : int = prim::Constant[value=0]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:550:46
  %62 : bool = prim::Constant[value=1]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2821:8
  %63 : int = prim::Constant[value=2]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:31
  %64 : str = prim::Constant[value="Expected more than 1 value per channel when training, got input size {}"]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
  %65 : str = prim::Constant[value="builtins.ValueError"]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:452:18
  %66 : float = prim::Constant[value=1.0000000000000001e-05]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:204:12
  %67 : float = prim::Constant[value=0.10000000000000001]() # :0:0
  %_0 : __torch__.model.efficient01A.EfficientBlock = prim::GetAttr[name="0"](%blocks.1)
  %_1 : __torch__.model.efficient01A.___torch_mangle_8.EfficientBlock = prim::GetAttr[name="1"](%blocks.1)
  %_2 : __torch__.model.efficient01A.___torch_mangle_12.EfficientBlock = prim::GetAttr[name="2"](%blocks.1)
  %_3 : __torch__.model.efficient01A.___torch_mangle_17.EfficientBlock = prim::GetAttr[name="3"](%blocks.1)
  %_4 : __torch__.model.efficient01A.___torch_mangle_21.EfficientBlock = prim::GetAttr[name="4"](%blocks.1)
  %_5 : __torch__.model.efficient01A.___torch_mangle_26.EfficientBlock = prim::GetAttr[name="5"](%blocks.1)
  %_6 : __torch__.model.efficient01A.___torch_mangle_30.EfficientBlock = prim::GetAttr[name="6"](%blocks.1)
  %bn1.2 : __torch__.torch.nn.modules.batchnorm.___torch_mangle_1.BatchNorm2d = prim::GetAttr[name="bn1"](%_0)
  %conv1.2 : __torch__.torch.nn.modules.conv.___torch_mangle_0.Conv2d = prim::GetAttr[name="conv1"](%_0)
  %weight.3 : Tensor = prim::GetAttr[name="weight"](%conv1.2)
  %bias.3 : Tensor? = prim::GetAttr[name="bias"](%conv1.2)
  %79 : int[] = prim::ListConstruct(%60, %60)
  %80 : int[] = prim::ListConstruct(%61, %61)
  %81 : int[] = prim::ListConstruct(%60, %60)
  %82 : Tensor = aten::conv2d(%x0.1, %weight.3, %bias.3, %79, %80, %81, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %training.3 : bool = prim::GetAttr[name="training"](%bn1.2)
   = prim::If(%training.3) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.3 : Tensor = prim::GetAttr[name="num_batches_tracked"](%bn1.2)
      %85 : Tensor = aten::add_(%num_batches_tracked.3, %60, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training.5 : bool = prim::GetAttr[name="training"](%bn1.2)
  %running_mean.3 : Tensor = prim::GetAttr[name="running_mean"](%bn1.2)
  %running_var.3 : Tensor = prim::GetAttr[name="running_var"](%bn1.2)
  %weight.5 : Tensor = prim::GetAttr[name="weight"](%bn1.2)
  %bias.5 : Tensor = prim::GetAttr[name="bias"](%bn1.2)
   = prim::If(%training.5) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %91 : int[] = aten::size(%82) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.3 : int = aten::__getitem__(%91, %61) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %93 : int = aten::len(%91) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %94 : int = aten::sub(%93, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0.2 : int = prim::Loop(%94, %62, %size_prods.3) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.3 : int, %size_prods0.9 : int):
          %98 : int = aten::add(%i.3, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %99 : int = aten::__getitem__(%91, %98) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.3 : int = aten::mul(%size_prods0.9, %99) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%62, %size_prods1.3)
      %101 : bool = aten::eq(%size_prods0.2, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%101) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %102 : str = aten::format(%64, %91) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%102, %65) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %103 : Tensor = aten::batch_norm(%82, %weight.5, %bias.5, %running_mean.3, %running_var.3, %training.5, %67, %66, %62) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %out.2 : Tensor = aten::gelu(%103, %59) # /workspace/ImageGenetic/model/efficient01A.py:46:14
  %bn2.2 : __torch__.torch.nn.modules.batchnorm.___torch_mangle_3.BatchNorm2d = prim::GetAttr[name="bn2"](%_0)
  %conv2.2 : __torch__.torch.nn.modules.conv.___torch_mangle_2.Conv2d = prim::GetAttr[name="conv2"](%_0)
  %weight.7 : Tensor = prim::GetAttr[name="weight"](%conv2.2)
  %bias.7 : Tensor? = prim::GetAttr[name="bias"](%conv2.2)
  %109 : int[] = prim::ListConstruct(%60, %60)
  %110 : int[] = prim::ListConstruct(%60, %60)
  %111 : int[] = prim::ListConstruct(%60, %60)
  %112 : Tensor = aten::conv2d(%out.2, %weight.7, %bias.7, %109, %110, %111, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %training.7 : bool = prim::GetAttr[name="training"](%bn2.2)
   = prim::If(%training.7) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.5 : Tensor = prim::GetAttr[name="num_batches_tracked"](%bn2.2)
      %115 : Tensor = aten::add_(%num_batches_tracked.5, %60, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training.9 : bool = prim::GetAttr[name="training"](%bn2.2)
  %running_mean.5 : Tensor = prim::GetAttr[name="running_mean"](%bn2.2)
  %running_var.5 : Tensor = prim::GetAttr[name="running_var"](%bn2.2)
  %weight.9 : Tensor = prim::GetAttr[name="weight"](%bn2.2)
  %bias.9 : Tensor = prim::GetAttr[name="bias"](%bn2.2)
   = prim::If(%training.9) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %121 : int[] = aten::size(%112) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.5 : int = aten::__getitem__(%121, %61) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %123 : int = aten::len(%121) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %124 : int = aten::sub(%123, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0.11 : int = prim::Loop(%124, %62, %size_prods.5) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.5 : int, %size_prods0.13 : int):
          %128 : int = aten::add(%i.5, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %129 : int = aten::__getitem__(%121, %128) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.5 : int = aten::mul(%size_prods0.13, %129) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%62, %size_prods1.5)
      %131 : bool = aten::eq(%size_prods0.11, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%131) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %132 : str = aten::format(%64, %121) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%132, %65) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %133 : Tensor = aten::batch_norm(%112, %weight.9, %bias.9, %running_mean.5, %running_var.5, %training.9, %67, %66, %62) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %out0.2 : Tensor = aten::gelu(%133, %59) # /workspace/ImageGenetic/model/efficient01A.py:47:14
  %135 : int[] = aten::size(%x0.1) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %136 : int = aten::__getitem__(%135, %60) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %137 : int[] = aten::size(%out0.2) # /workspace/ImageGenetic/model/efficient01A.py:49:32
  %138 : int = aten::__getitem__(%137, %60) # /workspace/ImageGenetic/model/efficient01A.py:49:32
  %139 : bool = aten::eq(%136, %138) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %input0.1 : Tensor = prim::If(%139) # /workspace/ImageGenetic/model/efficient01A.py:49:8
    block0():
      %out1.2 : Tensor = aten::add_(%out0.2, %x0.1, %60) # /workspace/ImageGenetic/model/efficient01A.py:50:12
      -> (%out1.2)
    block1():
      -> (%out0.2)
  %bn1.4 : __torch__.torch.nn.modules.batchnorm.___torch_mangle_5.BatchNorm2d = prim::GetAttr[name="bn1"](%_1)
  %conv1.4 : __torch__.torch.nn.modules.conv.___torch_mangle_4.Conv2d = prim::GetAttr[name="conv1"](%_1)
  %weight.11 : Tensor = prim::GetAttr[name="weight"](%conv1.4)
  %bias.11 : Tensor? = prim::GetAttr[name="bias"](%conv1.4)
  %146 : int[] = prim::ListConstruct(%60, %60)
  %147 : int[] = prim::ListConstruct(%61, %61)
  %148 : int[] = prim::ListConstruct(%60, %60)
  %149 : Tensor = aten::conv2d(%input0.1, %weight.11, %bias.11, %146, %147, %148, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %training.11 : bool = prim::GetAttr[name="training"](%bn1.4)
   = prim::If(%training.11) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.7 : Tensor = prim::GetAttr[name="num_batches_tracked"](%bn1.4)
      %152 : Tensor = aten::add_(%num_batches_tracked.7, %60, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training.13 : bool = prim::GetAttr[name="training"](%bn1.4)
  %running_mean.7 : Tensor = prim::GetAttr[name="running_mean"](%bn1.4)
  %running_var.7 : Tensor = prim::GetAttr[name="running_var"](%bn1.4)
  %weight.13 : Tensor = prim::GetAttr[name="weight"](%bn1.4)
  %bias.13 : Tensor = prim::GetAttr[name="bias"](%bn1.4)
   = prim::If(%training.13) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %158 : int[] = aten::size(%149) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.7 : int = aten::__getitem__(%158, %61) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %160 : int = aten::len(%158) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %161 : int = aten::sub(%160, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0.15 : int = prim::Loop(%161, %62, %size_prods.7) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.7 : int, %size_prods0.17 : int):
          %165 : int = aten::add(%i.7, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %166 : int = aten::__getitem__(%158, %165) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.7 : int = aten::mul(%size_prods0.17, %166) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%62, %size_prods1.7)
      %168 : bool = aten::eq(%size_prods0.15, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%168) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %169 : str = aten::format(%64, %158) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%169, %65) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %170 : Tensor = aten::batch_norm(%149, %weight.13, %bias.13, %running_mean.7, %running_var.7, %training.13, %67, %66, %62) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %out.4 : Tensor = aten::gelu(%170, %59) # /workspace/ImageGenetic/model/efficient01A.py:46:14
  %bn2.4 : __torch__.torch.nn.modules.batchnorm.___torch_mangle_7.BatchNorm2d = prim::GetAttr[name="bn2"](%_1)
  %conv2.4 : __torch__.torch.nn.modules.conv.___torch_mangle_6.Conv2d = prim::GetAttr[name="conv2"](%_1)
  %weight.15 : Tensor = prim::GetAttr[name="weight"](%conv2.4)
  %bias.15 : Tensor? = prim::GetAttr[name="bias"](%conv2.4)
  %176 : int[] = prim::ListConstruct(%63, %63)
  %177 : int[] = prim::ListConstruct(%63, %63)
  %178 : int[] = prim::ListConstruct(%60, %60)
  %179 : Tensor = aten::conv2d(%out.4, %weight.15, %bias.15, %176, %177, %178, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %training.15 : bool = prim::GetAttr[name="training"](%bn2.4)
   = prim::If(%training.15) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.9 : Tensor = prim::GetAttr[name="num_batches_tracked"](%bn2.4)
      %182 : Tensor = aten::add_(%num_batches_tracked.9, %60, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training.17 : bool = prim::GetAttr[name="training"](%bn2.4)
  %running_mean.9 : Tensor = prim::GetAttr[name="running_mean"](%bn2.4)
  %running_var.9 : Tensor = prim::GetAttr[name="running_var"](%bn2.4)
  %weight.17 : Tensor = prim::GetAttr[name="weight"](%bn2.4)
  %bias.17 : Tensor = prim::GetAttr[name="bias"](%bn2.4)
   = prim::If(%training.17) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %188 : int[] = aten::size(%179) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.9 : int = aten::__getitem__(%188, %61) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %190 : int = aten::len(%188) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %191 : int = aten::sub(%190, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0.19 : int = prim::Loop(%191, %62, %size_prods.9) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.9 : int, %size_prods0.21 : int):
          %195 : int = aten::add(%i.9, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %196 : int = aten::__getitem__(%188, %195) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.9 : int = aten::mul(%size_prods0.21, %196) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%62, %size_prods1.9)
      %198 : bool = aten::eq(%size_prods0.19, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%198) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %199 : str = aten::format(%64, %188) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%199, %65) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %200 : Tensor = aten::batch_norm(%179, %weight.17, %bias.17, %running_mean.9, %running_var.9, %training.17, %67, %66, %62) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %out0.4 : Tensor = aten::gelu(%200, %59) # /workspace/ImageGenetic/model/efficient01A.py:47:14
  %202 : int[] = aten::size(%input0.1) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %203 : int = aten::__getitem__(%202, %60) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %204 : int[] = aten::size(%out0.4) # /workspace/ImageGenetic/model/efficient01A.py:49:32
  %205 : int = aten::__getitem__(%204, %60) # /workspace/ImageGenetic/model/efficient01A.py:49:32
  %206 : bool = aten::eq(%203, %205) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %input1.1 : Tensor = prim::If(%206) # /workspace/ImageGenetic/model/efficient01A.py:49:8
    block0():
      %out1.4 : Tensor = aten::add_(%out0.4, %input0.1, %60) # /workspace/ImageGenetic/model/efficient01A.py:50:12
      -> (%out1.4)
    block1():
      -> (%out0.4)
  %bn1.6 : __torch__.torch.nn.modules.batchnorm.___torch_mangle_10.BatchNorm2d = prim::GetAttr[name="bn1"](%_2)
  %conv1.6 : __torch__.torch.nn.modules.conv.___torch_mangle_9.Conv2d = prim::GetAttr[name="conv1"](%_2)
  %weight.19 : Tensor = prim::GetAttr[name="weight"](%conv1.6)
  %bias.19 : Tensor? = prim::GetAttr[name="bias"](%conv1.6)
  %213 : int[] = prim::ListConstruct(%60, %60)
  %214 : int[] = prim::ListConstruct(%61, %61)
  %215 : int[] = prim::ListConstruct(%60, %60)
  %216 : Tensor = aten::conv2d(%input1.1, %weight.19, %bias.19, %213, %214, %215, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %training.19 : bool = prim::GetAttr[name="training"](%bn1.6)
   = prim::If(%training.19) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.11 : Tensor = prim::GetAttr[name="num_batches_tracked"](%bn1.6)
      %219 : Tensor = aten::add_(%num_batches_tracked.11, %60, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training.21 : bool = prim::GetAttr[name="training"](%bn1.6)
  %running_mean.11 : Tensor = prim::GetAttr[name="running_mean"](%bn1.6)
  %running_var.11 : Tensor = prim::GetAttr[name="running_var"](%bn1.6)
  %weight.21 : Tensor = prim::GetAttr[name="weight"](%bn1.6)
  %bias.21 : Tensor = prim::GetAttr[name="bias"](%bn1.6)
   = prim::If(%training.21) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %225 : int[] = aten::size(%216) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.11 : int = aten::__getitem__(%225, %61) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %227 : int = aten::len(%225) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %228 : int = aten::sub(%227, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0.23 : int = prim::Loop(%228, %62, %size_prods.11) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.11 : int, %size_prods0.25 : int):
          %232 : int = aten::add(%i.11, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %233 : int = aten::__getitem__(%225, %232) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.11 : int = aten::mul(%size_prods0.25, %233) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%62, %size_prods1.11)
      %235 : bool = aten::eq(%size_prods0.23, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%235) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %236 : str = aten::format(%64, %225) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%236, %65) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %237 : Tensor = aten::batch_norm(%216, %weight.21, %bias.21, %running_mean.11, %running_var.11, %training.21, %67, %66, %62) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %out.6 : Tensor = aten::gelu(%237, %59) # /workspace/ImageGenetic/model/efficient01A.py:46:14
  %bn2.6 : __torch__.torch.nn.modules.batchnorm.___torch_mangle_7.BatchNorm2d = prim::GetAttr[name="bn2"](%_2)
  %conv2.6 : __torch__.torch.nn.modules.conv.___torch_mangle_11.Conv2d = prim::GetAttr[name="conv2"](%_2)
  %weight.23 : Tensor = prim::GetAttr[name="weight"](%conv2.6)
  %bias.23 : Tensor? = prim::GetAttr[name="bias"](%conv2.6)
  %243 : int[] = prim::ListConstruct(%60, %60)
  %244 : int[] = prim::ListConstruct(%63, %63)
  %245 : int[] = prim::ListConstruct(%60, %60)
  %246 : Tensor = aten::conv2d(%out.6, %weight.23, %bias.23, %243, %244, %245, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %training.23 : bool = prim::GetAttr[name="training"](%bn2.6)
   = prim::If(%training.23) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.13 : Tensor = prim::GetAttr[name="num_batches_tracked"](%bn2.6)
      %249 : Tensor = aten::add_(%num_batches_tracked.13, %60, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training.25 : bool = prim::GetAttr[name="training"](%bn2.6)
  %running_mean.13 : Tensor = prim::GetAttr[name="running_mean"](%bn2.6)
  %running_var.13 : Tensor = prim::GetAttr[name="running_var"](%bn2.6)
  %weight.25 : Tensor = prim::GetAttr[name="weight"](%bn2.6)
  %bias.25 : Tensor = prim::GetAttr[name="bias"](%bn2.6)
   = prim::If(%training.25) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %255 : int[] = aten::size(%246) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.13 : int = aten::__getitem__(%255, %61) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %257 : int = aten::len(%255) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %258 : int = aten::sub(%257, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0.27 : int = prim::Loop(%258, %62, %size_prods.13) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.13 : int, %size_prods0.29 : int):
          %262 : int = aten::add(%i.13, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %263 : int = aten::__getitem__(%255, %262) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.13 : int = aten::mul(%size_prods0.29, %263) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%62, %size_prods1.13)
      %265 : bool = aten::eq(%size_prods0.27, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%265) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %266 : str = aten::format(%64, %255) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%266, %65) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %267 : Tensor = aten::batch_norm(%246, %weight.25, %bias.25, %running_mean.13, %running_var.13, %training.25, %67, %66, %62) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %out0.6 : Tensor = aten::gelu(%267, %59) # /workspace/ImageGenetic/model/efficient01A.py:47:14
  %269 : int[] = aten::size(%input1.1) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %270 : int = aten::__getitem__(%269, %60) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %271 : int[] = aten::size(%out0.6) # /workspace/ImageGenetic/model/efficient01A.py:49:32
  %272 : int = aten::__getitem__(%271, %60) # /workspace/ImageGenetic/model/efficient01A.py:49:32
  %273 : bool = aten::eq(%270, %272) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %input2.1 : Tensor = prim::If(%273) # /workspace/ImageGenetic/model/efficient01A.py:49:8
    block0():
      %out1.6 : Tensor = aten::add_(%out0.6, %input1.1, %60) # /workspace/ImageGenetic/model/efficient01A.py:50:12
      -> (%out1.6)
    block1():
      -> (%out0.6)
  %bn1.8 : __torch__.torch.nn.modules.batchnorm.___torch_mangle_14.BatchNorm2d = prim::GetAttr[name="bn1"](%_3)
  %conv1.8 : __torch__.torch.nn.modules.conv.___torch_mangle_13.Conv2d = prim::GetAttr[name="conv1"](%_3)
  %weight.27 : Tensor = prim::GetAttr[name="weight"](%conv1.8)
  %bias.27 : Tensor? = prim::GetAttr[name="bias"](%conv1.8)
  %280 : int[] = prim::ListConstruct(%60, %60)
  %281 : int[] = prim::ListConstruct(%61, %61)
  %282 : int[] = prim::ListConstruct(%60, %60)
  %283 : Tensor = aten::conv2d(%input2.1, %weight.27, %bias.27, %280, %281, %282, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %training.27 : bool = prim::GetAttr[name="training"](%bn1.8)
   = prim::If(%training.27) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.15 : Tensor = prim::GetAttr[name="num_batches_tracked"](%bn1.8)
      %286 : Tensor = aten::add_(%num_batches_tracked.15, %60, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training.29 : bool = prim::GetAttr[name="training"](%bn1.8)
  %running_mean.15 : Tensor = prim::GetAttr[name="running_mean"](%bn1.8)
  %running_var.15 : Tensor = prim::GetAttr[name="running_var"](%bn1.8)
  %weight.29 : Tensor = prim::GetAttr[name="weight"](%bn1.8)
  %bias.29 : Tensor = prim::GetAttr[name="bias"](%bn1.8)
   = prim::If(%training.29) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %292 : int[] = aten::size(%283) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.15 : int = aten::__getitem__(%292, %61) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %294 : int = aten::len(%292) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %295 : int = aten::sub(%294, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0.31 : int = prim::Loop(%295, %62, %size_prods.15) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.15 : int, %size_prods0.33 : int):
          %299 : int = aten::add(%i.15, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %300 : int = aten::__getitem__(%292, %299) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.15 : int = aten::mul(%size_prods0.33, %300) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%62, %size_prods1.15)
      %302 : bool = aten::eq(%size_prods0.31, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%302) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %303 : str = aten::format(%64, %292) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%303, %65) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %304 : Tensor = aten::batch_norm(%283, %weight.29, %bias.29, %running_mean.15, %running_var.15, %training.29, %67, %66, %62) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %out.8 : Tensor = aten::gelu(%304, %59) # /workspace/ImageGenetic/model/efficient01A.py:46:14
  %bn2.8 : __torch__.torch.nn.modules.batchnorm.___torch_mangle_16.BatchNorm2d = prim::GetAttr[name="bn2"](%_3)
  %conv2.8 : __torch__.torch.nn.modules.conv.___torch_mangle_15.Conv2d = prim::GetAttr[name="conv2"](%_3)
  %weight.31 : Tensor = prim::GetAttr[name="weight"](%conv2.8)
  %bias.31 : Tensor? = prim::GetAttr[name="bias"](%conv2.8)
  %310 : int[] = prim::ListConstruct(%63, %63)
  %311 : int[] = prim::ListConstruct(%63, %63)
  %312 : int[] = prim::ListConstruct(%60, %60)
  %313 : Tensor = aten::conv2d(%out.8, %weight.31, %bias.31, %310, %311, %312, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %training.31 : bool = prim::GetAttr[name="training"](%bn2.8)
   = prim::If(%training.31) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.17 : Tensor = prim::GetAttr[name="num_batches_tracked"](%bn2.8)
      %316 : Tensor = aten::add_(%num_batches_tracked.17, %60, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training.33 : bool = prim::GetAttr[name="training"](%bn2.8)
  %running_mean.17 : Tensor = prim::GetAttr[name="running_mean"](%bn2.8)
  %running_var.17 : Tensor = prim::GetAttr[name="running_var"](%bn2.8)
  %weight.33 : Tensor = prim::GetAttr[name="weight"](%bn2.8)
  %bias.33 : Tensor = prim::GetAttr[name="bias"](%bn2.8)
   = prim::If(%training.33) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %322 : int[] = aten::size(%313) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.17 : int = aten::__getitem__(%322, %61) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %324 : int = aten::len(%322) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %325 : int = aten::sub(%324, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0.35 : int = prim::Loop(%325, %62, %size_prods.17) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.17 : int, %size_prods0.37 : int):
          %329 : int = aten::add(%i.17, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %330 : int = aten::__getitem__(%322, %329) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.17 : int = aten::mul(%size_prods0.37, %330) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%62, %size_prods1.17)
      %332 : bool = aten::eq(%size_prods0.35, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%332) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %333 : str = aten::format(%64, %322) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%333, %65) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %334 : Tensor = aten::batch_norm(%313, %weight.33, %bias.33, %running_mean.17, %running_var.17, %training.33, %67, %66, %62) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %out0.8 : Tensor = aten::gelu(%334, %59) # /workspace/ImageGenetic/model/efficient01A.py:47:14
  %336 : int[] = aten::size(%input2.1) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %337 : int = aten::__getitem__(%336, %60) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %338 : int[] = aten::size(%out0.8) # /workspace/ImageGenetic/model/efficient01A.py:49:32
  %339 : int = aten::__getitem__(%338, %60) # /workspace/ImageGenetic/model/efficient01A.py:49:32
  %340 : bool = aten::eq(%337, %339) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %input3.1 : Tensor = prim::If(%340) # /workspace/ImageGenetic/model/efficient01A.py:49:8
    block0():
      %out1.8 : Tensor = aten::add_(%out0.8, %input2.1, %60) # /workspace/ImageGenetic/model/efficient01A.py:50:12
      -> (%out1.8)
    block1():
      -> (%out0.8)
  %bn1.10 : __torch__.torch.nn.modules.batchnorm.___torch_mangle_19.BatchNorm2d = prim::GetAttr[name="bn1"](%_4)
  %conv1.10 : __torch__.torch.nn.modules.conv.___torch_mangle_18.Conv2d = prim::GetAttr[name="conv1"](%_4)
  %weight.35 : Tensor = prim::GetAttr[name="weight"](%conv1.10)
  %bias.35 : Tensor? = prim::GetAttr[name="bias"](%conv1.10)
  %347 : int[] = prim::ListConstruct(%60, %60)
  %348 : int[] = prim::ListConstruct(%61, %61)
  %349 : int[] = prim::ListConstruct(%60, %60)
  %350 : Tensor = aten::conv2d(%input3.1, %weight.35, %bias.35, %347, %348, %349, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %training.35 : bool = prim::GetAttr[name="training"](%bn1.10)
   = prim::If(%training.35) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.19 : Tensor = prim::GetAttr[name="num_batches_tracked"](%bn1.10)
      %353 : Tensor = aten::add_(%num_batches_tracked.19, %60, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training.37 : bool = prim::GetAttr[name="training"](%bn1.10)
  %running_mean.19 : Tensor = prim::GetAttr[name="running_mean"](%bn1.10)
  %running_var.19 : Tensor = prim::GetAttr[name="running_var"](%bn1.10)
  %weight.37 : Tensor = prim::GetAttr[name="weight"](%bn1.10)
  %bias.37 : Tensor = prim::GetAttr[name="bias"](%bn1.10)
   = prim::If(%training.37) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %359 : int[] = aten::size(%350) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.19 : int = aten::__getitem__(%359, %61) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %361 : int = aten::len(%359) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %362 : int = aten::sub(%361, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0.39 : int = prim::Loop(%362, %62, %size_prods.19) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.19 : int, %size_prods0.41 : int):
          %366 : int = aten::add(%i.19, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %367 : int = aten::__getitem__(%359, %366) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.19 : int = aten::mul(%size_prods0.41, %367) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%62, %size_prods1.19)
      %369 : bool = aten::eq(%size_prods0.39, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%369) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %370 : str = aten::format(%64, %359) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%370, %65) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %371 : Tensor = aten::batch_norm(%350, %weight.37, %bias.37, %running_mean.19, %running_var.19, %training.37, %67, %66, %62) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %out.10 : Tensor = aten::gelu(%371, %59) # /workspace/ImageGenetic/model/efficient01A.py:46:14
  %bn2.10 : __torch__.torch.nn.modules.batchnorm.___torch_mangle_16.BatchNorm2d = prim::GetAttr[name="bn2"](%_4)
  %conv2.10 : __torch__.torch.nn.modules.conv.___torch_mangle_20.Conv2d = prim::GetAttr[name="conv2"](%_4)
  %weight.39 : Tensor = prim::GetAttr[name="weight"](%conv2.10)
  %bias.39 : Tensor? = prim::GetAttr[name="bias"](%conv2.10)
  %377 : int[] = prim::ListConstruct(%60, %60)
  %378 : int[] = prim::ListConstruct(%63, %63)
  %379 : int[] = prim::ListConstruct(%60, %60)
  %380 : Tensor = aten::conv2d(%out.10, %weight.39, %bias.39, %377, %378, %379, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %training.39 : bool = prim::GetAttr[name="training"](%bn2.10)
   = prim::If(%training.39) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.21 : Tensor = prim::GetAttr[name="num_batches_tracked"](%bn2.10)
      %383 : Tensor = aten::add_(%num_batches_tracked.21, %60, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training.41 : bool = prim::GetAttr[name="training"](%bn2.10)
  %running_mean.21 : Tensor = prim::GetAttr[name="running_mean"](%bn2.10)
  %running_var.21 : Tensor = prim::GetAttr[name="running_var"](%bn2.10)
  %weight.41 : Tensor = prim::GetAttr[name="weight"](%bn2.10)
  %bias.41 : Tensor = prim::GetAttr[name="bias"](%bn2.10)
   = prim::If(%training.41) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %389 : int[] = aten::size(%380) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.21 : int = aten::__getitem__(%389, %61) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %391 : int = aten::len(%389) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %392 : int = aten::sub(%391, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0.43 : int = prim::Loop(%392, %62, %size_prods.21) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.21 : int, %size_prods0.45 : int):
          %396 : int = aten::add(%i.21, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %397 : int = aten::__getitem__(%389, %396) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.21 : int = aten::mul(%size_prods0.45, %397) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%62, %size_prods1.21)
      %399 : bool = aten::eq(%size_prods0.43, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%399) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %400 : str = aten::format(%64, %389) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%400, %65) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %401 : Tensor = aten::batch_norm(%380, %weight.41, %bias.41, %running_mean.21, %running_var.21, %training.41, %67, %66, %62) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %out0.10 : Tensor = aten::gelu(%401, %59) # /workspace/ImageGenetic/model/efficient01A.py:47:14
  %403 : int[] = aten::size(%input3.1) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %404 : int = aten::__getitem__(%403, %60) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %405 : int[] = aten::size(%out0.10) # /workspace/ImageGenetic/model/efficient01A.py:49:32
  %406 : int = aten::__getitem__(%405, %60) # /workspace/ImageGenetic/model/efficient01A.py:49:32
  %407 : bool = aten::eq(%404, %406) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %input4.1 : Tensor = prim::If(%407) # /workspace/ImageGenetic/model/efficient01A.py:49:8
    block0():
      %out1.10 : Tensor = aten::add_(%out0.10, %input3.1, %60) # /workspace/ImageGenetic/model/efficient01A.py:50:12
      -> (%out1.10)
    block1():
      -> (%out0.10)
  %bn1.12 : __torch__.torch.nn.modules.batchnorm.___torch_mangle_23.BatchNorm2d = prim::GetAttr[name="bn1"](%_5)
  %conv1.12 : __torch__.torch.nn.modules.conv.___torch_mangle_22.Conv2d = prim::GetAttr[name="conv1"](%_5)
  %weight.43 : Tensor = prim::GetAttr[name="weight"](%conv1.12)
  %bias.43 : Tensor? = prim::GetAttr[name="bias"](%conv1.12)
  %414 : int[] = prim::ListConstruct(%60, %60)
  %415 : int[] = prim::ListConstruct(%61, %61)
  %416 : int[] = prim::ListConstruct(%60, %60)
  %417 : Tensor = aten::conv2d(%input4.1, %weight.43, %bias.43, %414, %415, %416, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %training.43 : bool = prim::GetAttr[name="training"](%bn1.12)
   = prim::If(%training.43) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.23 : Tensor = prim::GetAttr[name="num_batches_tracked"](%bn1.12)
      %420 : Tensor = aten::add_(%num_batches_tracked.23, %60, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training.45 : bool = prim::GetAttr[name="training"](%bn1.12)
  %running_mean.23 : Tensor = prim::GetAttr[name="running_mean"](%bn1.12)
  %running_var.23 : Tensor = prim::GetAttr[name="running_var"](%bn1.12)
  %weight.45 : Tensor = prim::GetAttr[name="weight"](%bn1.12)
  %bias.45 : Tensor = prim::GetAttr[name="bias"](%bn1.12)
   = prim::If(%training.45) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %426 : int[] = aten::size(%417) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.23 : int = aten::__getitem__(%426, %61) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %428 : int = aten::len(%426) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %429 : int = aten::sub(%428, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0.47 : int = prim::Loop(%429, %62, %size_prods.23) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.23 : int, %size_prods0.49 : int):
          %433 : int = aten::add(%i.23, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %434 : int = aten::__getitem__(%426, %433) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.23 : int = aten::mul(%size_prods0.49, %434) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%62, %size_prods1.23)
      %436 : bool = aten::eq(%size_prods0.47, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%436) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %437 : str = aten::format(%64, %426) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%437, %65) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %438 : Tensor = aten::batch_norm(%417, %weight.45, %bias.45, %running_mean.23, %running_var.23, %training.45, %67, %66, %62) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %out.12 : Tensor = aten::gelu(%438, %59) # /workspace/ImageGenetic/model/efficient01A.py:46:14
  %bn2.12 : __torch__.torch.nn.modules.batchnorm.___torch_mangle_25.BatchNorm2d = prim::GetAttr[name="bn2"](%_5)
  %conv2.12 : __torch__.torch.nn.modules.conv.___torch_mangle_24.Conv2d = prim::GetAttr[name="conv2"](%_5)
  %weight.47 : Tensor = prim::GetAttr[name="weight"](%conv2.12)
  %bias.47 : Tensor? = prim::GetAttr[name="bias"](%conv2.12)
  %444 : int[] = prim::ListConstruct(%60, %60)
  %445 : int[] = prim::ListConstruct(%60, %60)
  %446 : int[] = prim::ListConstruct(%60, %60)
  %447 : Tensor = aten::conv2d(%out.12, %weight.47, %bias.47, %444, %445, %446, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %training.47 : bool = prim::GetAttr[name="training"](%bn2.12)
   = prim::If(%training.47) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.25 : Tensor = prim::GetAttr[name="num_batches_tracked"](%bn2.12)
      %450 : Tensor = aten::add_(%num_batches_tracked.25, %60, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training.49 : bool = prim::GetAttr[name="training"](%bn2.12)
  %running_mean.25 : Tensor = prim::GetAttr[name="running_mean"](%bn2.12)
  %running_var.25 : Tensor = prim::GetAttr[name="running_var"](%bn2.12)
  %weight.49 : Tensor = prim::GetAttr[name="weight"](%bn2.12)
  %bias.49 : Tensor = prim::GetAttr[name="bias"](%bn2.12)
   = prim::If(%training.49) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %456 : int[] = aten::size(%447) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.25 : int = aten::__getitem__(%456, %61) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %458 : int = aten::len(%456) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %459 : int = aten::sub(%458, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0.51 : int = prim::Loop(%459, %62, %size_prods.25) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.25 : int, %size_prods0.53 : int):
          %463 : int = aten::add(%i.25, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %464 : int = aten::__getitem__(%456, %463) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.25 : int = aten::mul(%size_prods0.53, %464) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%62, %size_prods1.25)
      %466 : bool = aten::eq(%size_prods0.51, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%466) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %467 : str = aten::format(%64, %456) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%467, %65) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %468 : Tensor = aten::batch_norm(%447, %weight.49, %bias.49, %running_mean.25, %running_var.25, %training.49, %67, %66, %62) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %out0.12 : Tensor = aten::gelu(%468, %59) # /workspace/ImageGenetic/model/efficient01A.py:47:14
  %470 : int[] = aten::size(%input4.1) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %471 : int = aten::__getitem__(%470, %60) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %472 : int[] = aten::size(%out0.12) # /workspace/ImageGenetic/model/efficient01A.py:49:32
  %473 : int = aten::__getitem__(%472, %60) # /workspace/ImageGenetic/model/efficient01A.py:49:32
  %474 : bool = aten::eq(%471, %473) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %input5.1 : Tensor = prim::If(%474) # /workspace/ImageGenetic/model/efficient01A.py:49:8
    block0():
      %out1.12 : Tensor = aten::add_(%out0.12, %input4.1, %60) # /workspace/ImageGenetic/model/efficient01A.py:50:12
      -> (%out1.12)
    block1():
      -> (%out0.12)
  %bn1.1 : __torch__.torch.nn.modules.batchnorm.___torch_mangle_28.BatchNorm2d = prim::GetAttr[name="bn1"](%_6)
  %conv1.1 : __torch__.torch.nn.modules.conv.___torch_mangle_27.Conv2d = prim::GetAttr[name="conv1"](%_6)
  %weight.2 : Tensor = prim::GetAttr[name="weight"](%conv1.1)
  %bias.2 : Tensor? = prim::GetAttr[name="bias"](%conv1.1)
  %481 : int[] = prim::ListConstruct(%60, %60)
  %482 : int[] = prim::ListConstruct(%61, %61)
  %483 : int[] = prim::ListConstruct(%60, %60)
  %484 : Tensor = aten::conv2d(%input5.1, %weight.2, %bias.2, %481, %482, %483, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %training.2 : bool = prim::GetAttr[name="training"](%bn1.1)
   = prim::If(%training.2) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.2 : Tensor = prim::GetAttr[name="num_batches_tracked"](%bn1.1)
      %487 : Tensor = aten::add_(%num_batches_tracked.2, %60, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training.4 : bool = prim::GetAttr[name="training"](%bn1.1)
  %running_mean.2 : Tensor = prim::GetAttr[name="running_mean"](%bn1.1)
  %running_var.2 : Tensor = prim::GetAttr[name="running_var"](%bn1.1)
  %weight.4 : Tensor = prim::GetAttr[name="weight"](%bn1.1)
  %bias.4 : Tensor = prim::GetAttr[name="bias"](%bn1.1)
   = prim::If(%training.4) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %493 : int[] = aten::size(%484) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.2 : int = aten::__getitem__(%493, %61) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %495 : int = aten::len(%493) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %496 : int = aten::sub(%495, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0.1 : int = prim::Loop(%496, %62, %size_prods.2) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.2 : int, %size_prods0.8 : int):
          %500 : int = aten::add(%i.2, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %501 : int = aten::__getitem__(%493, %500) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.2 : int = aten::mul(%size_prods0.8, %501) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%62, %size_prods1.2)
      %503 : bool = aten::eq(%size_prods0.1, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%503) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %504 : str = aten::format(%64, %493) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%504, %65) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %505 : Tensor = aten::batch_norm(%484, %weight.4, %bias.4, %running_mean.2, %running_var.2, %training.4, %67, %66, %62) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %out.1 : Tensor = aten::gelu(%505, %59) # /workspace/ImageGenetic/model/efficient01A.py:46:14
  %bn2.1 : __torch__.torch.nn.modules.batchnorm.___torch_mangle_25.BatchNorm2d = prim::GetAttr[name="bn2"](%_6)
  %conv2.1 : __torch__.torch.nn.modules.conv.___torch_mangle_29.Conv2d = prim::GetAttr[name="conv2"](%_6)
  %weight.6 : Tensor = prim::GetAttr[name="weight"](%conv2.1)
  %bias.6 : Tensor? = prim::GetAttr[name="bias"](%conv2.1)
  %511 : int[] = prim::ListConstruct(%60, %60)
  %512 : int[] = prim::ListConstruct(%60, %60)
  %513 : int[] = prim::ListConstruct(%60, %60)
  %514 : Tensor = aten::conv2d(%out.1, %weight.6, %bias.6, %511, %512, %513, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/conv.py:549:15
  %training.1 : bool = prim::GetAttr[name="training"](%bn2.1)
   = prim::If(%training.1) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:170:11
    block0():
      %num_batches_tracked.1 : Tensor = prim::GetAttr[name="num_batches_tracked"](%bn2.1)
      %517 : Tensor = aten::add_(%num_batches_tracked.1, %60, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py:173:16
      -> ()
    block1():
      -> ()
  %training : bool = prim::GetAttr[name="training"](%bn2.1)
  %running_mean.1 : Tensor = prim::GetAttr[name="running_mean"](%bn2.1)
  %running_var.1 : Tensor = prim::GetAttr[name="running_var"](%bn2.1)
  %weight.12 : Tensor = prim::GetAttr[name="weight"](%bn2.1)
  %bias.12 : Tensor = prim::GetAttr[name="bias"](%bn2.1)
   = prim::If(%training) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2809:4
    block0():
      %523 : int[] = aten::size(%514) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2810:27
      %size_prods.1 : int = aten::__getitem__(%523, %61) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2772:17
      %525 : int = aten::len(%523) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %526 : int = aten::sub(%525, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:19
      %size_prods0 : int = prim::Loop(%526, %62, %size_prods.1) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2773:4
        block0(%i.1 : int, %size_prods0.7 : int):
          %530 : int = aten::add(%i.1, %63) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:27
          %531 : int = aten::__getitem__(%523, %530) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:22
          %size_prods1.1 : int = aten::mul(%size_prods0.7, %531) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2774:8
          -> (%62, %size_prods1.1)
      %533 : bool = aten::eq(%size_prods0, %60) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:7
       = prim::If(%533) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2775:4
        block0():
          %534 : str = aten::format(%64, %523) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2777:12
           = prim::RaiseException(%534, %65) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2776:8
          -> ()
        block1():
          -> ()
      -> ()
    block1():
      -> ()
  %535 : Tensor = aten::batch_norm(%514, %weight.12, %bias.12, %running_mean.1, %running_var.1, %training, %67, %66, %62) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:2812:11
  %out0.1 : Tensor = aten::gelu(%535, %59) # /workspace/ImageGenetic/model/efficient01A.py:47:14
  %537 : int[] = aten::size(%input5.1) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %538 : int = aten::__getitem__(%537, %60) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %539 : int[] = aten::size(%out0.1) # /workspace/ImageGenetic/model/efficient01A.py:49:32
  %540 : int = aten::__getitem__(%539, %60) # /workspace/ImageGenetic/model/efficient01A.py:49:32
  %541 : bool = aten::eq(%538, %540) # /workspace/ImageGenetic/model/efficient01A.py:49:11
  %x1.1 : Tensor = prim::If(%541) # /workspace/ImageGenetic/model/efficient01A.py:49:8
    block0():
      %out1.1 : Tensor = aten::add_(%out0.1, %input5.1, %60) # /workspace/ImageGenetic/model/efficient01A.py:50:12
      -> (%out1.1)
    block1():
      -> (%out0.1)
  %global_pool.1 : __torch__.torch.nn.modules.pooling.AdaptiveAvgPool2d = prim::GetAttr[name="global_pool"](%self.1)
  %544 : int = prim::Constant[value=2]()
  %545 : NoneType = prim::Constant()
  %546 : str = prim::Constant[value="AssertionError: "]() # :0:0
  %547 : int = prim::Constant[value=1]() # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/pooling.py:1455:44
  %548 : int[] = prim::ListConstruct(%547, %547)
  %549 : int[] = aten::size(%x1.1) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:1381:51
  %550 : int = aten::len(%549) # <string>:5:9
  %551 : bool = aten::gt(%550, %544) # <string>:5:9
   = prim::If(%551) # <string>:5:2
    block0():
      -> ()
    block1():
       = prim::RaiseException(%546, %545) # <string>:5:2
      -> ()
  %x2.1 : Tensor = aten::adaptive_avg_pool2d(%x1.1, %548) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/functional.py:1382:11
  %x3.1 : Tensor = aten::flatten(%x2.1, %4, %2) # /workspace/ImageGenetic/model/efficient01A.py:113:12
  %fc.1 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="fc"](%self.1)
  %weight.1 : Tensor = prim::GetAttr[name="weight"](%fc.1)
  %bias.1 : Tensor = prim::GetAttr[name="bias"](%fc.1)
  %555 : Tensor = aten::linear(%x3.1, %weight.1, %bias.1) # /workspace/ImageGenetic/venv/lib/python3.11/site-packages/torch/nn/modules/linear.py:125:15
  return (%555)
